pipeline {
    agent any
    environment{
        MAVEN_IMAGE = 'maven:3.8.4-jdk-11'
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image "${MAVEN_IMAGE}"
                    reuseNode true
                }
            }
            steps {
                echo 'Starting Build stage...'
                configFileProvider([configFile(fileId: "${params.CONFIG_FILE_ID}", variable: 'MAVEN_SETTINGS')]) {
                    sh 'mvn --global-settings ${MAVEN_SETTINGS} clean install'
                }
            }
        }
        stage('Results'){
            steps {
                echo 'Starting Results stage...'
                junit '**/target/surefire-reports/TEST-*.xml'
                archive '**/target/*.jar'
                archive '**/target/*.zip'
            }
        }
    }

    post {
        unsuccessful {
            echo 'Build unsuccessful'
            emailext attachLog: true,
                subject: "Build failed in Jenkins: ${JOB_NAME}#${BUILD_NUMBER}",
                body: "See ${BUILD_URL} for details.",
                to: "${params.EMAIL_RECIPIENTS}"
        }

        changed {
            script {
                if ("${currentBuild.currentResult}" == 'SUCCESS') {
                    echo "Current build successful, previous build was unsuccessful"
                    emailext attachLog: true,
                        subject: "${JOB_NAME} back to stable",
                        body: "See ${BUILD_URL} for details.",
                        to: "${params.EMAIL_RECIPIENTS}"
                }
            }
        }

        cleanup {
            echo 'Cleaning workspace...'
            cleanWs()
        }
    }
}

<?xml version="1.0" encoding="UTF-8" ?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. Sveriges Kommuner och Landsting 
	licenses this file to you under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:codes="urn:riv:financial:patientfees:exemption:enums:1"
	xmlns:tns="urn:riv:financial:patientfees:exemption:1"
	targetNamespace="urn:riv:financial:patientfees:exemption:1" elementFormDefault="qualified"
	attributeFormDefault="unqualified" version="1.0">

	<xs:import schemaLocation="financial_patientfees_exemption_enum_1.0.xsd"
		namespace="urn:riv:financial:patientfees:exemption:enums:1"/>

	<xs:complexType name="FeeExemptionType">
		<xs:sequence>
			<xs:element name="patientId" type="tns:IIType"/>
			<xs:element name="transactions" type="tns:TransactionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="exemptions" type="tns:ExemptionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ExemptionType">
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="highCostProtectionPeriod" type="tns:DatePeriodType"/>
			<xs:element name="exemptionPeriod" type="tns:DatePeriodType"/>
			<xs:element name="typeOfExemption" type="codes:TypeOfExemptionEnum"/>
			<xs:element name="region" type="tns:IIType" />
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="HSAIdType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:complexType name="PersonIdType">
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="type" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TransactionType">
		<xs:sequence>
			<xs:element name="fee" type="tns:AmountType" maxOccurs="1" minOccurs="0"/>
			<xs:element name="dateOfVisit" type="tns:DateType" minOccurs="0"/>
			<xs:element name="timeOfRegistration" type="tns:TimeStampType" minOccurs="0"/>
			<xs:element name="typeOfFee" type="codes:TypeOfExemptionEnum"/>
			<xs:element name="careGiver" type="tns:IIType" minOccurs="0"/>
			<xs:element name="careUnit" type="tns:IIType" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="OrgUnitType">
		<xs:sequence>
			<xs:element name="orgUnitHSAId" type="tns:HSAIdType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="orgUnitName" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="orgUnitTelecom" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="orgUnitEmail" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="orgUnitAddress" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="orgUnitLocation" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TimePeriodType">
		<xs:annotation>
			<xs:documentation>
				Används för att specificera ett datumintervall
				med
				hjälp av start- och slutdatum.

				start:
				Startdatum på formatet
				YYYYMMDDhhmmss
				end:
				Slutdatum på formatet YYYYMMDDhhmmss
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="start" type="tns:TimeType"/>
			<xs:element name="end" type="tns:TimeType" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="DatePeriodType">
		<xs:sequence>
			<xs:element name="start" type="tns:DateType" minOccurs="0"/>
			<xs:element name="end" type="tns:DateType" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="TimeType">
		<xs:annotation>
			<xs:documentation>
				The time has the format hhmmss
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(0[0-9]|1[0-9]|2[0123])([0-5])([0-9])([0-5])([0-9])"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DateType">
		<xs:annotation>
			<xs:documentation>YYYYMMDD</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TimeStampType">
		<xs:annotation>
			<xs:documentation> A quantity specifying a point on the axis of natural time. A point in time
        is most often represented as a calendar expression. The time has the format YYYYMMDDhhmmss
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern
				value="(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])(0[0-9]|1[0-9]|2[0123])([0-5])([0-9])([0-5])([0-9])"
			/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="AmountType">
		<xs:sequence>
			<xs:element name="amount" type="xs:decimal"/>
			<xs:element name="currency" type="tns:CVType"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>


	<xs:complexType name="CVType">
		<xs:sequence>
			<xs:element name="code" type="xs:string" minOccurs="0"/>
			<xs:element name="codeSystem" type="xs:string" minOccurs="0"/>
			<xs:element name="codeSystemName" type="xs:string" minOccurs="0"/>
			<xs:element name="codeSystemVersion" type="xs:string" minOccurs="0"/>
			<xs:element name="displayName" type="xs:string" minOccurs="0"/>
			<xs:element name="originalText" type="xs:string" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="IIType">
		<xs:sequence>
			<xs:element name="root" type="xs:string"/>
			<xs:element name="extension" type="xs:string" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  <xs:complexType name="ActorType">
    <xs:sequence>
      <xs:element name="actorTypeEnum" type="codes:ActorTypeEnum"/>
      <xs:element name="actorId" type="tns:IIType"/>
      <xs:element name="careGiverId" type="tns:IIType" minOccurs="0" />
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
